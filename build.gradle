buildscript {
    repositories {
        mavenCentral()
        maven { url "http://files.minecraftforge.net/maven" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

//set it so it has to be java 8
sourceCompatibility = 1.8
targetCompatibility = 1.8

group = package_group
archivesBaseName = mod_name
version = "${mc_version}-${major_version}.${minor_version}.${build_number}"


repositories {
    maven { url "http://dvs1.progwml6.com/files/maven" }
}

dependencies {
    // compile against the JEI API
    deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"

    //need to figure out how to make this work
//    deobfCompile "slimeknights:TConstruct:1.10.2-2.6.1.jenkins229"
//    deobfCompile "slimeknights.mantle:Mantle:1.10.2-1.1.3.jenkins142"

}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

//    useDepAts = true

    replace "@VERSION@", project.version
    replaceIn "Constants.java"

    mappings = project.mappings_version
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

jar {
    classifier = ''
    manifest.mainAttributes(
        "Built-By": System.getProperty('user.name'),
        "Created-By": "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
        "Implementation-Title": project.name,
        "Implementation-Version": project.version,
    )
}

// Javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}